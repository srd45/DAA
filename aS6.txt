import java.util.Scanner;
public class kruskal {
        public static void main(String[] args) {
    
        Scanner sc = new Scanner(System.in);
        int cost[][]= new int[10][10];
        int parent[] = new int[10];
        int i, j, n,ne = 1, a = 0, b = 0, u = 0, v = 0;
        intmin,mincost = 0;
        System.out.println("Enter the Number of Nodes: ");
        n = sc.nextInt();
        System.out.println("Enter the Cost Matrix:");
        for(i=1; i<=n; i++)
        {
           for(j=1; j<=n; j++)
             {
                    cost[i][j] = sc.nextInt();
             }
        }   
        for(i=1;i<=n;i++)
            parent[i] = 0;
        System.out.println("\n\n\t  Kruskals Algorithm\n");
        System.out.println("\n\tThe Edges of Spanning Trees are: ");
        while(ne<n)
        {
            min = 999;
            for(i=1;i<=n;i++)
            {
                for(j=1;j<=n;j++)
                {
                    if(cost[i][j] < min)
                    {
                            min = cost[i][j];
                             a = u = i;
                             b= v = j;
                    }
                }
            }
            while(parent[u] > 0)
                u = parent[u];
            while(parent[v] > 0)
                v = parent[v];
            
            if(u != v)
            {
                System.out.println("\n\t"+ne+" Edge ["+a+","+b+"] = "+min);
                ne++;
                mincost += min;
                 parent[v] = u;
            }
            cost[a][b]=cost[b][a]=999;    //selected edge is made 999
         }
        System.out.println("\n\tMinimum Cost = "+mincost);
    }
}






ALGORITHM:
KRUSKAL(G):
1A=Ø
2	foreachv?G.V:
3	MAKE-SET(v)
4	foreach (u,v)inG.Eorderedbyweight(u,v),increasing:
5	ifFIND-SET(u)?FIND-SET(v):
6	A=A?{(u,v)}
7	UNION(u, v)
8	return A













Output:
Enter the Number of Nodes: 
3
Enter the Cost Matrix:
999 1 2  
1 999 3
2 3 999



Kruskals Algorithm


	The Edges of Spanning Trees are: 

	1 Edge [1,2] = 1

	2 Edge [1,3] = 2

	Minimum Cost = 3

